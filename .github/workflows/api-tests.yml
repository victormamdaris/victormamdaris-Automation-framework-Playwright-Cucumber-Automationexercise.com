name: API Tests Execution

permissions:
  contents: write
  pages: write
  id-token: write

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/test/features/api/**'
      - 'src/test/services/api/**'
      - 'src/test/steps/api/**'
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      tags:
        description: 'Test tags to run (e.g., @smoke, @authentication, @products)'
        required: false
        default: '@smoke'
  schedule:
    # Run API smoke tests every 6 hours
    - cron: '0 */6 * * *'

env:
  NODE_VERSION: '20'

jobs:
  api-smoke-tests:
    name: API Smoke Tests - ${{ matrix.environment }}
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request' || github.event_name == 'schedule'
    
    strategy:
      fail-fast: false
      matrix:
        environment: [dev]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Load environment configuration
        run: cp .env.${{ matrix.environment }} .env

      - name: Run API Smoke Tests
        env:
          ENV: ${{ matrix.environment }}
          CI: true
          SCREENSHOT_ON_FAILURE: false
          VIDEO_ON_FAILURE: false
        run: npx cucumber-js --profile api --tags "@smoke and @api"

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: report-api-smoke-${{ matrix.environment }}
          path: reports/
          retention-days: 30

      - name: Generate Serenity Report
        if: always()
        run: npm run serenity:report

      - name: Upload Serenity Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: serenity-report-api-smoke-${{ matrix.environment }}
          path: target/site/serenity/
          retention-days: 30

      - name: Notify on Failure
        if: failure() && github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'API Smoke Tests Failed - Scheduled Run',
              body: 'The scheduled API smoke tests have failed. Please check the workflow run for details.\n\n' +
                    'Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              labels: ['automated', 'api-tests', 'failure']
            })

  api-custom-tests:
    name: API Tests - ${{ inputs.environment }}
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Load environment configuration
        run: |
          if [ -f ".env.${{ inputs.environment }}" ]; then
            cp .env.${{ inputs.environment }} .env
            echo "Loaded .env.${{ inputs.environment }}"
          else
            echo "Warning: .env.${{ inputs.environment }} not found, using defaults"
          fi

      - name: Run API Tests
        env:
          ENV: ${{ inputs.environment }}
          CI: true
        run: |
          if [ -n "${{ inputs.tags }}" ]; then
            npx cucumber-js --profile api --tags "${{ inputs.tags }}"
          else
            npm run test:api
          fi

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: report-api-${{ inputs.environment }}
          path: reports/
          retention-days: 30

      - name: Generate Serenity Report
        if: always()
        run: npm run serenity:report

      - name: Upload Serenity Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: serenity-report-api-${{ inputs.environment }}
          path: target/site/serenity/
          retention-days: 30

  api-regression-tests:
    name: API Regression - All Environments
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && inputs.tags == '@regression'
    
    strategy:
      fail-fast: false
      matrix:
        environment: [dev, staging, prod]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Load environment configuration
        run: cp .env.${{ matrix.environment }} .env

      - name: Run API Regression Tests
        env:
          ENV: ${{ matrix.environment }}
          CI: true
        run: npm run test:api

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: report-api-regression-${{ matrix.environment }}
          path: reports/
          retention-days: 30

      - name: Generate Serenity Report
        if: always()
        run: npm run serenity:report

      - name: Upload Serenity Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: serenity-report-api-regression-${{ matrix.environment }}
          path: target/site/serenity/
          retention-days: 30

  api-health-check:
    name: API Health Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    strategy:
      matrix:
        environment: [dev, staging, prod]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Load environment configuration
        run: cp .env.${{ matrix.environment }} .env

      - name: Run Health Check
        env:
          ENV: ${{ matrix.environment }}
          CI: true
        run: npx cucumber-js --profile api --tags "@smoke and @positive"

      - name: Upload Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: health-check-${{ matrix.environment }}
          path: reports/
          retention-days: 7
